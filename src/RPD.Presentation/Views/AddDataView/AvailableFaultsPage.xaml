<Page
	x:Class="RPD.Presentation.Views.AddDataView.AvailableFaultsPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="clr-namespace:RPD.Presentation.Utils.ValueConverters;assembly=RPD.Presentation.Utils"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:Converters="clr-namespace:Dnv.Utils.Converters;assembly=Dnv.Utils"
	Title="AvailableFaultsPage"
	xmlns:dt="clr-namespace:RPD.Presentation.ViewModels.AddDataViewModels.DesignTime"
	xmlns:selectors="clr-namespace:Dnv.Utils.TemplateSelectors;assembly=Dnv.Utils"
	xmlns:DalViewModels="clr-namespace:RPD.Presentation.ViewModels.DalViewModels"
	xmlns:dalViewModels="clr-namespace:RPD.Presentation.Contracts.ViewModels.DalViewModels;assembly=RPD.Presentation.Contracts"
	d:DesignHeight="252"
	d:DesignWidth="786"
	TextOptions.TextFormattingMode="Display"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance Type=dt:AddDataDesignTime, d:IsDesignTimeCreatable=True}">

	<Page.Resources>
		<ResourceDictionary>
			<SolidColorBrush
				x:Key="{x:Static SystemColors.HighlightBrushKey}"
				Color="Transparent" />
			<Converters:CollectionItemsCountToVisibilityConverter
				x:Key="countToVisibilityConverter"
				VisibleIfGtZero="False" />
			<converters:CollectionToCollectionViewConverter
				x:Key="collectionConverter" />

			<Style
				x:Key="listItemStyle">
				<Setter
					Property="TextBlock.Visibility"
					Value="Collapsed" />
				<Setter
					Property="TextBlock.FontSize"
					Value="10" />
				<Setter
					Property="TextBlock.Margin"
					Value="5,0,0,0" />
				<Setter
					Property="TextBlock.FontStyle"
					Value="Italic" />
				<Setter
					Property="Control.HorizontalAlignment"
					Value="Right" />
				<Setter
					Property="Control.VerticalAlignment"
					Value="Center" />
			</Style>

			<!-- Стиль прячет текст, если лог уже сохранён в хранилище -->
			<Style
				x:Key="textSavedToRepoStyle"
				BasedOn="{StaticResource listItemStyle}">
				<Setter
					Property="TextBlock.Foreground"
					Value="Gray" />
				<Style.Triggers>
					<DataTrigger
						Binding="{Binding Path=IsSavedToRepository}"
						Value="True">
						<Setter
							Property="TextBlock.Visibility"
							Value="Visible" />
					</DataTrigger>
				</Style.Triggers>
			</Style>


			<Style
				x:Key="checkBoxSavedToRepoStyle">
				<Setter
					Property="CheckBox.IsEnabled"
					Value="True" />
				<Setter
					Property="CheckBox.IsChecked"
					Value="{Binding Path=IsChecked, Mode=TwoWay}" />
				<Setter
					Property="CheckBox.Margin"
					Value="0,0,5,0" />
				<Setter
					Property="CheckBox.HorizontalAlignment"
					Value="Left" />
				<Setter
					Property="CheckBox.VerticalAlignment"
					Value="Center" />
				<Style.Triggers>
					<DataTrigger
						Binding="{Binding Path=IsSavedToRepository}"
						Value="True">
						<Setter
							Property="CheckBox.IsEnabled"
							Value="False" />
						<Setter
							Property="CheckBox.IsChecked"
							Value="{x:Null}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<!--  Растягивает элемент списка.  -->
			<Style
				x:Key="stretchedListBoxItem"
				TargetType="{x:Type ListBoxItem}">
				<Setter
					Property="HorizontalContentAlignment"
					Value="Stretch" />
			</Style>

			<Style
				x:Key="headerStyle"
				BasedOn="{StaticResource dialogHeader2Style}">
				<Setter
					Property="Control.Margin"
					Value="3,3,3,3" />
			</Style>

			<Style
				x:Key="selectButtonStyle">
				<Setter
					Property="Control.Margin"
					Value="3" />
				<Setter
					Property="Button.Height"
					Value="19" />
				<Setter
					Property="Button.VerticalContentAlignment"
					Value="Center" />
			</Style>

			<Style
				x:Key="sectionTreeViewItemHeaderStyle"
				TargetType="{x:Type TreeViewItem}">
				<Setter
					Property="HeaderTemplate">
					<Setter.Value>
						<DataTemplate>
							<StackPanel
								Orientation="Horizontal"
								DataContext="{Binding Path=DataContext, 
                                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}}">
								<TextBlock
									Text="{Binding Path=OwnerLocomotive.Name}" />
								<TextBlock
									xml:space="preserve">.</TextBlock>
								<TextBlock
									Text="{Binding Path=Name}" />
							</StackPanel>
						</DataTemplate>
					</Setter.Value>
				</Setter>

				<Setter
					Property="Margin"
					Value="-25,0,0,0" />
				<Setter
					Property="IsExpanded"
					Value="True" />
			</Style>

			<!--  Шаблон элемента списка. ИСПОЛЬЗУЕТСЯ ниже -->
			<DataTemplate
				x:Key="listBoxItemTemplate">
				<StackPanel
					Margin="-20,0,0,0"
					Orientation="Horizontal">
					<CheckBox
						Focusable="False"
						Style="{StaticResource checkBoxSavedToRepoStyle}" />
					<TextBlock
						Text="{Binding Path=Name}" />
					<TextBlock
						Style="{StaticResource textSavedToRepoStyle}">Сохранено</TextBlock>
				</StackPanel>
			</DataTemplate>


			<!-- Селектор шаблонов для TreeView Архива-->
			<selectors:MutlipleInterfaceDataTemplateSelector
				x:Key="baseSectionsDataTemplateSelector">
				<selectors:MutlipleInterfaceDataTemplateSelector.Items>
					<selectors:DataTemplateItem
						InterfaceName="IPsnLogViewModel"
						DataTemplateName="listBoxItemTemplate" />
					<selectors:DataTemplateItem
						InterfaceName="IFaultViewModel"
						DataTemplateName="listBoxItemTemplate" />
				</selectors:MutlipleInterfaceDataTemplateSelector.Items>
			</selectors:MutlipleInterfaceDataTemplateSelector>

			<selectors:MutlipleInterfaceDataTemplateSelector
				x:Key="psnPowerOnDataTemplateSelector"
				BasedOn="{StaticResource baseSectionsDataTemplateSelector}">
				<selectors:MutlipleInterfaceDataTemplateSelector.Items>
					<selectors:DataTemplateItem
						InterfaceName="ISectionViewModel"
						DataTemplateName="sectionPsnPowerOnLogsDataTemplate" />
				</selectors:MutlipleInterfaceDataTemplateSelector.Items>
			</selectors:MutlipleInterfaceDataTemplateSelector>

			<selectors:MutlipleInterfaceDataTemplateSelector
				x:Key="psnDataTemplateSelector"
				BasedOn="{StaticResource baseSectionsDataTemplateSelector}">
				<selectors:MutlipleInterfaceDataTemplateSelector.Items>
					<selectors:DataTemplateItem
						InterfaceName="ISectionViewModel"
						DataTemplateName="sectionPsnLogsDataTemplate" />
				</selectors:MutlipleInterfaceDataTemplateSelector.Items>
			</selectors:MutlipleInterfaceDataTemplateSelector>

			<selectors:MutlipleInterfaceDataTemplateSelector
				x:Key="faultDataTemplateSelector"
				BasedOn="{StaticResource baseSectionsDataTemplateSelector}">
				<selectors:MutlipleInterfaceDataTemplateSelector.Items>
					<selectors:DataTemplateItem
						InterfaceName="ISectionViewModel"
						DataTemplateName="sectionFaultsDataTemplate" />
				</selectors:MutlipleInterfaceDataTemplateSelector.Items>
			</selectors:MutlipleInterfaceDataTemplateSelector>

			<DataTemplate
				x:Key="sectionPsnPowerOnLogsDataTemplate"
				DataType="{x:Type dalViewModels:ISectionViewModel}">
				<TreeViewItem
					Style="{StaticResource sectionTreeViewItemHeaderStyle}"
					ItemsSource="{Binding Path=PsnPowerOnLogs, Converter={StaticResource collectionConverter}, ConverterParameter=Name}"
					ItemTemplateSelector="{StaticResource baseSectionsDataTemplateSelector}">
				</TreeViewItem>
			</DataTemplate>

			<DataTemplate
				x:Key="sectionPsnLogsDataTemplate"
				DataType="{x:Type dalViewModels:ISectionViewModel}">
				<TreeViewItem
					Style="{StaticResource sectionTreeViewItemHeaderStyle}"
					ItemsSource="{Binding Path=PsnLogs, Converter={StaticResource collectionConverter}, ConverterParameter=Name}"
					ItemTemplateSelector="{StaticResource baseSectionsDataTemplateSelector}">
				</TreeViewItem>
			</DataTemplate >

			<DataTemplate
				x:Key="sectionFaultsDataTemplate"
				DataType="{x:Type dalViewModels:ISectionViewModel}">
				<TreeViewItem
					Style="{StaticResource sectionTreeViewItemHeaderStyle}"
					ItemsSource="{Binding Path=Faults, Converter={StaticResource collectionConverter}, ConverterParameter=Name}"
					ItemTemplateSelector="{StaticResource baseSectionsDataTemplateSelector}">
				</TreeViewItem>
			</DataTemplate >

			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary
					Source="pack://application:,,,/RPD.Presentation.Utils;component/Assets/DataTemplates.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Page.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition
				Height="*" />
			<RowDefinition
				Height="Auto" />
		</Grid.RowDefinitions>

		<!--Логи ПСН-->
		<Grid
			Grid.Row="0">
			<Grid.RowDefinitions>
				<RowDefinition
					Height="Auto" />
				<RowDefinition
					Height="*" />
				<RowDefinition
					Height="Auto" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<TextBlock
				Grid.Column="0"
				Grid.Row="0"
				Style="{StaticResource headerStyle}">Записи ПСН по включению</TextBlock>
			<!--Записи ПСН по включению-->
			<TreeView
				Grid.Column="0"
				Grid.Row="1"
				ItemsSource="{Binding Path=AvailableFaults.Sections}"
				ItemTemplateSelector="{StaticResource psnPowerOnDataTemplateSelector}">
			</TreeView>
			<StackPanel
				Grid.Column="0"
				Grid.Row="2"
				Orientation="Horizontal"
				HorizontalAlignment="Right">
				<Button
					Style="{StaticResource selectButtonStyle}"
					Command="{Binding Path=AvailableFaults.SelectAllPsnPowerOnCommand}">Выделить все</Button>
				<Button
					Style="{StaticResource selectButtonStyle}"
					Command="{Binding Path=AvailableFaults.UnselectAllPsnPowerOnCommand}">Снять выделение</Button>
			</StackPanel>


			<TextBlock
				Grid.Column="1"
				Grid.Row="0"
				Style="{StaticResource headerStyle}">Записи ПСН фиксированного объёма</TextBlock>
			<!--Записи ПСН-->
			<TreeView
				Grid.Column="1"
				Grid.Row="1"
				ItemsSource="{Binding Path=AvailableFaults.Sections}"
				ItemTemplateSelector="{StaticResource psnDataTemplateSelector}">
			</TreeView>
			<StackPanel
				Grid.Column="1"
				Grid.Row="2"
				Orientation="Horizontal"
				HorizontalAlignment="Right">
				<Button
					Style="{StaticResource selectButtonStyle}"
					Command="{Binding Path=AvailableFaults.SelectAllPsnCommand}">Выделить все</Button>
				<Button
					Style="{StaticResource selectButtonStyle}"
					Command="{Binding Path=AvailableFaults.UnselectAllPsnCommand}">Снять выделение</Button>
			</StackPanel>


			<TextBlock
				Grid.Column="2"
				Grid.Row="0"
				Style="{StaticResource headerStyle}">Аварии РПД</TextBlock>
			<TreeView
				Grid.Column="2"
				Grid.Row="1"
				ItemsSource="{Binding Path=AvailableFaults.Sections}"
				ItemTemplateSelector="{StaticResource faultDataTemplateSelector}">
			</TreeView>
			<StackPanel
				Grid.Column="2"
				Grid.Row="2"
				Orientation="Horizontal"
				HorizontalAlignment="Right">
				<Button
					Style="{StaticResource selectButtonStyle}"
					Command="{Binding Path=AvailableFaults.SelectAllFaultsCommand}">Выделить все</Button>
				<Button
					Style="{StaticResource selectButtonStyle}"
					Command="{Binding Path=AvailableFaults.UnselectAllFaultsCommand}">Снять выделение</Button>
			</StackPanel>
		</Grid>

		<DockPanel
			Grid.Row="1">
			<Button
				DockPanel.Dock="Right"
				Style="{StaticResource dialogButtonStyle}"
				Command="{Binding Path=AvailableFaults.NextCommand}">Далее &gt;</Button>

			<Button
				DockPanel.Dock="Right"
				Style="{StaticResource dialogButtonStyle}"
				HorizontalAlignment="Right"
				Command="{Binding Path=AvailableFaults.BackCommand}">&lt; Назад</Button>
		</DockPanel>

		<!--<Button Grid.Row="1"
                HorizontalAlignment="Right"
                Command="{Binding AvailableFaults.NextCommand}"
                Style="{StaticResource dialogButtonStyle}">
            Далее &gt;
        </Button>-->
	</Grid>
</Page>
